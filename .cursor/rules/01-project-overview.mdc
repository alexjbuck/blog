---
description: 
globs: 
alwaysApply: true
---
# Project Overview: Pathvein, rich and deep file structure pattern matching

## Project Structure

This is a static site blog generated by the tool `zola`. 

Zola is a static site generator (SSG), similar to Hugo, Pelican, and Jekyll (for a comprehensive list of SSGs, please see Jamstack). It is written in Rust and uses the Tera template engine, which is similar to Jinja2, Django templates, Liquid, and Twig.

Content is written in CommonMark, a strongly defined, highly compatible specification of Markdown. Zola uses pulldown-cmark to parse markdown files. The goal of this library is 100% compliance with the CommonMark spec. It adds a few additional features such as parsing footnotes, Github flavored tables, Github flavored task lists and strikethrough.

## Technology Stack

- `zola` for static site generation.
- `tera` for html templating.
- `yarn` for task orchestration and node package management.
- `eslint` and `npmpkgjsonlint` for linting.
- GitHub Actions for CI/CD
- GitHub Pages for deployment

## Repository Organization

```
├── config.toml
├── content/
│   └── blog/
│       ├── _index.md
│       ├── first.md
│       └── second.md
├── sass/
├── static/
├── templates/
│   ├── base.html`
│   ├── blog-page.html
│   ├── blog.html
│   └── index.html
└── themes/

```

Here's a high-level overview of each of these directories and config.toml.

### config.toml
A mandatory Zola configuration file in TOML format. This file is explained in detail in the configuration documentation.

### content
Contains all your markup content (mostly .md files). Each child directory of the content directory represents a section that contains pages (your .md files).

### sass
Contains the Sass files to be compiled. Non-Sass files will be ignored. The directory structure of the sass folder will be preserved when copying over the compiled files; for example, a file at sass/something/site.scss will be compiled to public/something/site.css.

### static
Contains any kind of file. All the files/directories in the static directory will be copied as-is to the output directory. If your static files are large, you can configure Zola to hard link them instead of copying them by setting hard_link_static = true in the config file.

### templates
Contains all the Tera templates that will be used to render your site.

### themes
Contains themes that can be used for your site.



## Development Workflow

1. Develop new code.
2. If appropriate, write tests.
3. Run tests locally.
4. Run linter, run in -fix mode if issues, manually resolve any remaining issues.
5. Commit changes if tests and linters pass.
6. CI/CD pipelines run tests and linters and manage deployments.


## Collaboration Guidelines

- Use descriptive branch names
- Create focused PRs with clear descriptions
- Follow the established code style
- Update documentation as needed

